===============================
How to use 2-matrix_divided.py
===============================

Usage of ``matrix_divided(matrix, div)``
========================================

Import function from module:

	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Test for regular marix:

	>>> matrix_divided([[2, 4, 8], [1, 2, 3]], 2)
	[[1.0, 2.0, 4.0], [0.5, 1.0, 1.5]]

Test for one element:

	>>> matrix_divided([[2]], 2)
	[[1.0]]

Test for 0 division:

	>>> matrix_divided([[2, 4]], 0)
	Traceback (most recent call last):
	...
	ZeroDivisionError: division by zero

Test for negative no:

	>>> matrix_divided([[2, 4]], -1)
	[[-2.0, -4.0]]

Test for empty matrix:

	>>> matrix_divided([[]], 1)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Test for division by inf:

	>>> matrix_divided([[2, 4.4, 6]], float('inf'))
	[[0.0, 0.0, 0.0]]

Test for division by nan:

	>>> matrix_divided([[2, 4, 8], [1, 2, 3]], float('nan'))
	[[nan, nan, nan], [nan, nan, nan]]

Test for none:

	>>> matrix_divided(none, 1)
	Traceback (most recent call last):
	...
	NameError: name 'none' is not defined

Test for  matrix with different rows:

	>>> matrix_divided([[2, 4, 8], [1, 3]], 2)
	Traceback (most recent call last):
   	...
	TypeError: Each row of the matrix must have the same size

Test for division by non-num:

	>>> matrix_divided([[2]], "alx")
	Traceback (most recent call last):
	...
    	TypeError: div must be a number

Test for missing 1st arg:

    	>>> matrix_divided()
    	Traceback (most recent call last):
    	...
    	TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
